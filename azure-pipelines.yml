trigger: none
#pool:
#  vmImage: ubuntu-latest
#
#container: maven:3.8.1-openjdk-20-slim

#Your build pipeline references an undefined variable named ‘aiKey’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
variables:
  acr_service_name: 'ac1'
  acr.name: 'acrsangam.azurecr.io'
  acr.pull.password: 'gg59ZfHHH4Oc4I8nxzl4qmN+4d8XrNXhq4EPdmrMiY+ACRDHmaqQ'
  acr.pull.username: 'token-sangam'
  acr_repo: 'backend-demo'
  image_tag: 1.16.3
  azure.service.connection: '12_july_aks_sc'

stages:
  - stage: Backend_Build
    displayName: 'Backend Build & Push to ACR'
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: ubuntu-latest
        container: beginneracademy/azdoagent:1.4
        steps:
          - bash: |
              which java
              java --version
              ls -lrt /opt/
              docker --version
              mvn -v
              ls -lrta $(System.DefaultWorkingDirectory)/
            displayName: check java version

          - task: Maven@3
            inputs:
              mavenPomFile: 'pom.xml'
              mavenOptions: '-Xmx3072m'
              javaHomeOption: 'JDKVersion'
              jdkDirectory: '/usr/local/openjdk-20'
              publishJUnitResults: false
              mavenAuthenticateFeed: true
              effectivePomSkip: true
              goals: 'package -Dmaven.test.skip=true'

          - task: Docker@2
            displayName: "Build"
            inputs:
              command: build
              repository: '$(acr.name)/$(acr_repo)'
              tags: "$(image_tag)"

          - bash: |
              docker image list
              sleep 3
            displayName: check docker image list

          - task: Docker@2
            displayName: Login to ACR
            inputs:
              command: login
              containerRegistry: $(acr_service_name)

          - task: Docker@2
            displayName: Push to acr
            inputs:
              command: push
              repository: '$(acr_repo)'
              containerRegistry: $(acr_service_name)
              tags: "$(image_tag)"

  - stage: Deployment
    displayName: kubectl deploy to AKS
    jobs:
      - deployment: kubectl_deploy_aks
        displayName: deploy to aks
        environment:
          name: PROD
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                - task: Kubernetes@1
                  displayName: kubectl deploy mysql-root-secret.yaml
                  inputs:
                    connectionType: 'Kubernetes Service Connection'
                    kubernetesServiceEndpoint: '$(azure.service.connection)'
                    command: 'apply'
                    arguments: '-f $(System.DefaultWorkingDirectory)/kubernates/mysql-root-secret.yaml'
                    secretType: 'dockerRegistry'
                    containerRegistryType: 'Azure Container Registry'

                - task: Kubernetes@1
                  displayName: kubectl deploy mysql-user-secret.yaml
                  inputs:
                    connectionType: 'Kubernetes Service Connection'
                    kubernetesServiceEndpoint: '$(azure.service.connection)'
                    command: 'apply'
                    arguments: '-f $(System.DefaultWorkingDirectory)/kubernates/mysql-user-secret.yaml'
                    secretType: 'dockerRegistry'
                    containerRegistryType: 'Azure Container Registry'


                - task: Kubernetes@1
                  displayName: kubectl deploy mysql-configmap
                  inputs:
                    connectionType: 'Kubernetes Service Connection'
                    kubernetesServiceEndpoint: '$(azure.service.connection)'
                    command: 'apply'
                    arguments: '-f $(System.DefaultWorkingDirectory)/kubernates/mysql-configmap.yaml'
                    secretType: 'dockerRegistry'
                    containerRegistryType: 'Azure Container Registry'

                - task: Kubernetes@1
                  displayName: kubectl deploy mysql-deployment.yaml
                  inputs:
                    connectionType: 'Kubernetes Service Connection'
                    kubernetesServiceEndpoint: '$(azure.service.connection)'
                    command: 'apply'
                    arguments: '-f $(System.DefaultWorkingDirectory)/kubernates/mysql-deployment.yaml'
                    secretType: 'dockerRegistry'
                    containerRegistryType: 'Azure Container Registry'

                - task: Kubernetes@1
                  displayName: kubectl deploy spring-demo-deployment
                  inputs:
                    connectionType: 'Kubernetes Service Connection'
                    kubernetesServiceEndpoint: '$(azure.service.connection)'
                    command: 'apply'
                    arguments: '-f $(System.DefaultWorkingDirectory)/kubernates/spring-deployment.yaml'
                    secretType: 'dockerRegistry'
                    containerRegistryType: 'Azure Container Registry'